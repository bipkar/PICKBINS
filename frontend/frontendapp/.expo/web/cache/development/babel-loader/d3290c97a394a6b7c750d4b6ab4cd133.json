{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\livea\\\\Documents\\\\programming\\\\nephacks\\\\NepHacks\\\\NepHacks\\\\frontend\\\\frontendapp\\\\src\\\\components\\\\adminGenerateList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavbarText, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, Table } from \"reactstrap\";\nimport axios from \"axios\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport SideBarNav from \"./sidebarNav\";\nimport BrandHeader from \"./brandHeader\";\n\nfunction AdminGenerateList() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showTask = _useState2[0],\n      setShowTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      generatedDriver = _useState4[0],\n      setGeneratedDriver = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      containsAlready = _useState6[0],\n      setContainsAlready = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      count = _useState8[0],\n      setCount = _useState8[1];\n\n  var _useState9 = useState([false]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      notDisabled = _useState10[0],\n      setNotDisabled = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dlist = _useState12[0],\n      setDlist = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      ulist = _useState14[0],\n      setUlist = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      generatedClicked = _useState16[0],\n      setGeneratedClicked = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      first = _useState18[0],\n      setFirst = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      last = _useState20[0],\n      setLast = _useState20[1];\n\n  var generateTasks = function generateTasks(driverID, first, last) {\n    setFirst(first);\n    setLast(last);\n    console.log(\"driver id\");\n    console.log(driverID);\n    console.log(\"driver first\");\n    console.log(first);\n    console.log(\"driver last\");\n    console.log(last);\n    axios.post(\"/generateTask\", {\n      driverID: driverID\n    }).then(function (response) {\n      console.log(response.data.path);\n      setUlist(response.data.path);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    setGeneratedClicked(true);\n  };\n\n  useEffect(function () {\n    axios.get(\"/getDriver\").then(function (response) {\n      console.log(response);\n      setDlist(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, React.createElement(BrandHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, React.createElement(SideBarNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), React.createElement(Table, {\n    striped: true,\n    style: {\n      flex: 0.9,\n      marginLeft: 20,\n      marginTop: 2,\n      border: \"1px solid #C0C0C0\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Driver Name\"), React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Action\"))), React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, dlist.map(function (d, index) {\n    return React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, d.fName, \" \", d.lName), React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      color: \"success\",\n      style: {\n        margin: 0\n      },\n      onClick: function onClick() {\n        return generateTasks(d._id, d.fName, d.lName);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, \"GenerateTask\")));\n  })))), React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, generatedClicked ? React.createElement(Table, {\n    striped: true,\n    style: {\n      width: 200,\n      marginLeft: 200,\n      marginTop: 2,\n      border: \"1px solid #C0C0C0\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"Optimal list of \", first, \" \", last))), React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, ulist.map(function (u, index) {\n    return React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, u.address));\n  }))) : null));\n}\n\nexport default AdminGenerateList;\n{}","map":{"version":3,"sources":["C:/Users/livea/Documents/programming/nephacks/NepHacks/NepHacks/frontend/frontendapp/src/components/adminGenerateList.js"],"names":["React","useEffect","useState","useCookies","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","NavbarText","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Table","axios","ListGroup","ListGroupItem","SideBarNav","BrandHeader","AdminGenerateList","showTask","setShowTask","generatedDriver","setGeneratedDriver","containsAlready","setContainsAlready","count","setCount","notDisabled","setNotDisabled","dlist","setDlist","ulist","setUlist","generatedClicked","setGeneratedClicked","first","setFirst","last","setLast","generateTasks","driverID","console","log","post","then","response","data","path","catch","error","get","flex","marginLeft","marginTop","border","textAlign","map","d","index","fName","lName","margin","_id","width","u","address"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport SideBarNav from \"./sidebarNav\";\r\nimport BrandHeader from \"./brandHeader\";\r\n\r\n/**\r\n * Admin Generate List generate the optimal path to take to go to each address of customer to pickup waste.\r\n * After finishing catagorizing the list using assigned list tab, this function creates task list for driver to finish.\r\n *\r\n */\r\n\r\nfunction AdminGenerateList() {\r\n  const [showTask, setShowTask] = useState(false);\r\n  const [generatedDriver, setGeneratedDriver] = useState([]);\r\n  const [containsAlready, setContainsAlready] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n  const [notDisabled, setNotDisabled] = useState([false]);\r\n\r\n  const [dlist, setDlist] = useState([]);\r\n  const [ulist, setUlist] = useState([]);\r\n  const [generatedClicked, setGeneratedClicked] = useState(false);\r\n  const [first, setFirst] = useState(\"\");\r\n  const [last, setLast] = useState(\"\");\r\n\r\n  /**\r\n   *\r\n   * @param {token} driverID\r\n   * @param {string} first\r\n   * @param {string} last\r\n   */\r\n  /**\r\n   *\r\n   * Generates\r\n   */\r\n  const generateTasks = (driverID, first, last) => {\r\n    setFirst(first);\r\n    setLast(last);\r\n    console.log(\"driver id\");\r\n    console.log(driverID);\r\n    console.log(\"driver first\");\r\n    console.log(first);\r\n    console.log(\"driver last\");\r\n    console.log(last);\r\n    axios\r\n      .post(\"/generateTask\", { driverID: driverID })\r\n      .then((response) => {\r\n        console.log(response.data.path);\r\n        setUlist(response.data.path);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setGeneratedClicked(true);\r\n\r\n    // var i;\r\n    // let newClick = [...notDisabled];\r\n    // newClick[index] = true;\r\n    // setNotDisabled(newClick);\r\n\r\n    // setShowTask(true);\r\n\r\n    // if (generatedDriver.length === 0 && count === 0) {\r\n    //   setGeneratedDriver([...generatedDriver, index]);\r\n    //   console.log(generatedDriver);\r\n    //   setCount(count + 1);\r\n    // } else {\r\n    //   for (i = 0; i < generatedDriver.length; i++) {\r\n    //     if (generatedDriver[i] === index) {\r\n    //       setContainsAlready(true);\r\n    //     }\r\n    //   }\r\n    //   if (!containsAlready) {\r\n    //     setGeneratedDriver([...generatedDriver, index]);\r\n    //     console.log(generatedDriver);\r\n    //     setCount(count + 1);\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/getDriver\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setDlist(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BrandHeader />\r\n      <div className=\"row\">\r\n        <SideBarNav />\r\n        <Table\r\n          striped\r\n          style={{\r\n            flex: 0.9,\r\n            marginLeft: 20,\r\n            marginTop: 2,\r\n            border: \"1px solid #C0C0C0\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Driver Name</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dlist.map((d, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  {d.fName} {d.lName}\r\n                </td>\r\n                <td>\r\n                  <Button\r\n                    color=\"success\"\r\n                    style={{ margin: 0 }}\r\n                    onClick={() => generateTasks(d._id, d.fName, d.lName)}\r\n                  >\r\n                    GenerateTask\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <div>\r\n        {generatedClicked ? (\r\n          <Table\r\n            striped\r\n            style={{\r\n              width: 200,\r\n              marginLeft: 200,\r\n              marginTop: 2,\r\n              border: \"1px solid #C0C0C0\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Optimal list of {first} {last}\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {ulist.map((u, index) => (\r\n                <tr key={index}>\r\n                  <td>{u.address}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default AdminGenerateList;\r\n\r\n{\r\n  /* <div className=\"mbsc-grid\" style={{ marginLeft: 190 }}>\r\n        {showTask ? (\r\n          <div className=\"row\">\r\n            {generatedDriver.map((data) => {\r\n              return (\r\n                <div>\r\n                  <Card style={{ margin: 20 }}>\r\n                    <p>{array[data].driver}</p>\r\n                    <ListGroup\r\n                      style={{\r\n                        margin: 20,\r\n                      }}\r\n                    >\r\n                      {array[data].addresses.map((uData) => {\r\n                        return (\r\n                          <ListGroupItem\r\n                            style={{\r\n                              width: 200,\r\n                              justifyContent: \"left\",\r\n                              alignItems: \"flex-start\",\r\n                              alignContent: \"flex-start\",\r\n                            }}\r\n                          >\r\n                            {uData}\r\n                          </ListGroupItem>\r\n                        );\r\n                      })}\r\n                    </ListGroup>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : null}\r\n      </div> */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}