{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\livea\\\\Documents\\\\programming\\\\nephacks\\\\NepHacks\\\\NepHacks\\\\frontend\\\\frontendapp\\\\src\\\\components\\\\adminAssignedList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport logo from \"../assets/logo.png\";\nimport axios from \"axios\";\nimport { Nav, NavItem, NavLink, Table, Button, Text } from \"reactstrap\";\nimport SideBarNav from \"./sidebarNav\";\nimport BrandHeader from \"./brandHeader\";\nimport { ListGroup, ListGroupItem, Card } from \"reactstrap\";\n\nfunction AdminAssignedList() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dlist = _useState2[0],\n      setDlist = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ulist = _useState4[0],\n      setUlist = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      categorizeClicked = _useState6[0],\n      setCategorizeClicked = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      first = _useState8[0],\n      setFirst = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      last = _useState10[0],\n      setLast = _useState10[1];\n\n  var catagorizeUsers = function catagorizeUsers(driverID, first, last) {\n    setFirst(first);\n    setLast(last);\n    console.log(\"driver id\");\n    console.log(driverID);\n    console.log(\"driver first\");\n    console.log(first);\n    console.log(\"driver last\");\n    console.log(last);\n    axios.post(\"/categorizeCustomer\", {\n      driverID: driverID\n    }).then(function (response) {\n      console.log(response.data);\n      setUlist(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    setCategorizeClicked(true);\n  };\n\n  useEffect(function () {\n    axios.get(\"/getDriver\").then(function (response) {\n      console.log(response);\n      setDlist(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(BrandHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(SideBarNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), React.createElement(Table, {\n    striped: true,\n    style: {\n      flex: 0.9,\n      marginLeft: 20,\n      marginTop: 2,\n      border: \"1px solid #C0C0C0\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Driver\"), React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Action\"))), React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, dlist.map(function (d, index) {\n    return React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, d.fName, \" \", d.lName), React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      color: \"success\",\n      style: {\n        margin: 0\n      },\n      onClick: function onClick() {\n        return catagorizeUsers(d._id, d.fName, d.lName);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, \"Catagorize\")));\n  })))), React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, categorizeClicked ? React.createElement(Table, {\n    striped: true,\n    style: {\n      width: 200,\n      marginLeft: 200,\n      marginTop: 2,\n      border: \"1px solid #C0C0C0\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Customers of \", first, \" \", last))), React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, ulist.map(function (u, index) {\n    return React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, u));\n  }))) : null));\n}\n\nexport default AdminAssignedList;\n{}","map":{"version":3,"sources":["C:/Users/livea/Documents/programming/nephacks/NepHacks/NepHacks/frontend/frontendapp/src/components/adminAssignedList.js"],"names":["React","useEffect","useState","useCookies","logo","axios","Nav","NavItem","NavLink","Table","Button","Text","SideBarNav","BrandHeader","ListGroup","ListGroupItem","Card","AdminAssignedList","dlist","setDlist","ulist","setUlist","categorizeClicked","setCategorizeClicked","first","setFirst","last","setLast","catagorizeUsers","driverID","console","log","post","then","response","data","catch","error","get","flex","marginLeft","marginTop","border","textAlign","map","d","index","fName","lName","margin","_id","width","u"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport logo from \"../assets/logo.png\";\r\nimport axios from \"axios\";\r\nimport { Nav, NavItem, NavLink, Table, Button, Text } from \"reactstrap\";\r\nimport SideBarNav from \"./sidebarNav\";\r\nimport BrandHeader from \"./brandHeader\";\r\nimport { ListGroup, ListGroupItem, Card } from \"reactstrap\";\r\n\r\n/**\r\n * Here in this page first drivers are catagorized with customers based on city.\r\n * For example driver 1 is assigned to collect city of Irving then customers with city Irving is assigned to driver 1\r\n * Here catagorized is done for only the driver working in a particular week by admin.\r\n * Catagorizing driver based on city need to be done before Generating task list for driver.\r\n */\r\nfunction AdminAssignedList() {\r\n  const [dlist, setDlist] = useState([]);\r\n  const [ulist, setUlist] = useState([]);\r\n  // const [showCatagory, setShowCatagory] = useState(false);\r\n  // const [catagorizedDriver, setCatagorizedDriver] = useState([]);\r\n  // const [containsAlready, setContainsAlready] = useState(false);\r\n  // const [count, setCount] = useState(0);\r\n  // const [notDisabled, setNotDisabled] = useState([false]);\r\n  const [categorizeClicked, setCategorizeClicked] = useState(false);\r\n  const [first, setFirst] = useState(\"\");\r\n  const [last, setLast] = useState(\"\");\r\n\r\n  const catagorizeUsers = (driverID, first, last) => {\r\n    setFirst(first);\r\n    setLast(last);\r\n    console.log(\"driver id\");\r\n    console.log(driverID);\r\n    console.log(\"driver first\");\r\n    console.log(first);\r\n    console.log(\"driver last\");\r\n    console.log(last);\r\n    axios\r\n      .post(\"/categorizeCustomer\", { driverID: driverID })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setUlist(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    setCategorizeClicked(true);\r\n\r\n    //   var i;\r\n    //   let newClick = [...notDisabled];\r\n    //   newClick[index] = true;\r\n    //   setNotDisabled(newClick);\r\n    //   setShowCatagory(true);\r\n\r\n    //   if (catagorizedDriver.length === 0 && count === 0) {\r\n    //     setCatagorizedDriver([...catagorizedDriver, index]);\r\n    //     console.log(catagorizedDriver);\r\n    //     setCount(count + 1);\r\n    //   } else {\r\n    //     for (i = 0; i < catagorizedDriver.length; i++) {\r\n    //       if (catagorizedDriver[i] === index) {\r\n    //         setContainsAlready(true);\r\n    //       }\r\n    //     }\r\n    //     if (!containsAlready) {\r\n    //       setCatagorizedDriver([...catagorizedDriver, index]);\r\n    //       console.log(catagorizedDriver);\r\n    //       setCount(count + 1);\r\n    //     }\r\n    //   }\r\n    // };\r\n\r\n    // const adminUserClicked = () => {\r\n    //   console.log(\"hello\");\r\n    //   axios.get(\"/getCustomer\").then((response) => {\r\n    //     console.log(response);\r\n    //   });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/getDriver\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setDlist(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BrandHeader />\r\n      <div className=\"row\">\r\n        <SideBarNav />\r\n\r\n        {/* add table/other content in each page after this */}\r\n        <Table\r\n          striped\r\n          style={{\r\n            flex: 0.9,\r\n            marginLeft: 20,\r\n            marginTop: 2,\r\n            border: \"1px solid #C0C0C0\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Driver</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dlist.map((d, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  {d.fName} {d.lName}\r\n                </td>\r\n                <td>\r\n                  <Button\r\n                    color=\"success\"\r\n                    style={{ margin: 0 }}\r\n                    //disabled={notDisabled[index] ? true : false}\r\n                    onClick={() => catagorizeUsers(d._id, d.fName, d.lName)}\r\n                  >\r\n                    Catagorize\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <div>\r\n        {categorizeClicked ? (\r\n          <Table\r\n            striped\r\n            style={{\r\n              width: 200,\r\n              marginLeft: 200,\r\n              marginTop: 2,\r\n              border: \"1px solid #C0C0C0\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Customers of {first} {last}\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {ulist.map((u, index) => (\r\n                <tr key={index}>\r\n                  <td>{u}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default AdminAssignedList;\r\n\r\n{\r\n  /* <div className=\"mbsc-grid\" style={{ marginLeft: 190 }}>\r\n        {showCatagory ? (\r\n          <div className=\"row\">\r\n            {catagorizedDriver.map((data) => {\r\n              return (\r\n                <div>\r\n                  <Card style={{ margin: 20 }}>\r\n                    <p>{dlist[data].driver}</p>\r\n                    <ListGroup\r\n                      style={{\r\n                        margin: 20,\r\n                      }}\r\n                    >\r\n                      {ulist[data].user.map((uData) => {\r\n                        return (\r\n                          <ListGroupItem\r\n                            style={{\r\n                              width: 200,\r\n                              justifyContent: \"left\",\r\n                              alignItems: \"flex-start\",\r\n                              alignContent: \"flex-start\",\r\n                            }}\r\n                          >\r\n                            {uData}\r\n                          </ListGroupItem>\r\n                        );\r\n                      })}\r\n                    </ListGroup>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : null}\r\n      </div> */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}